---
import { Icon } from 'astro-icon/components';
import Hamburger from './Hamburger.astro';
import HeaderModal from './HeaderModal.astro';
import { Picture } from 'astro:assets';

import logoImg from '@assets/img/logo.svg';
import type { HTMLAttributes } from 'astro/types';
import HeaderInput from './HeaderInput.astro';

type Props = Pick<HTMLAttributes<'header'>, 'class'>;

const { class: className, ...rest } = Astro.props;
---

<header class:list={['header', className]} data-component='header' {...rest}>
  <div class='header__container container'>
    <div class='header__wrapper'>
      <a href='/' class='header__logo'>
        <Picture inferSize layout='constrained' formats={['avif', 'webp']} src={logoImg} alt='logo' />
      </a>
      <div class='header__separator header__separator_first'></div>
      <div class='header__blocks'>
        <div class='header__top-block'>
          <HeaderInput />
          <div class='header__actions'>
            <a href='#' class='header__action'>
              <Icon name='account-icon' />
            </a>
            <a href='/cart' class='header__action'>
              <Icon name='cart-icon' />
            </a>
          </div>
        </div>
        <div class='header__separator header__separator_second'></div>
        <div class='header__bottom-block'>
          <Hamburger />
        </div>
      </div>
      <HeaderModal />
    </div>
  </div>
</header>

<style lang='scss'>
  .header {
    position: fixed;
    overflow: hidden;
    top: 0;
    left: 0;
    width: 100%;
    background-color: var(--white);
    z-index: 60;

    &.open {
      overflow: visible;
    }

    &__wrapper {
      overflow: hidden;
      padding: 6px 0 8px;
      padding-right: 0px;

      display: flex;
      align-items: center;
      gap: 4px;

      @include media('lg') {
        align-items: flex-start;
      }

      @include media('xl') {
        gap: 16px;
      }
    }

    &__logo {
      position: relative;
      flex-shrink: 0;

      width: 104px;
      height: 62px;

      @include media('md') {
        width: 122px;
        height: 70px;
      }

      @include media('xl') {
        width: 166px;
        height: 88px;
      }
      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    &__separator {
      display: none;
      flex-shrink: 0;

      background-color: var(--light-2);
      width: 1px;

      @include media('lg') {
        height: 68px;
      }

      @include media('xl') {
        height: 88px;
      }

      &_first {
        @include media('xl') {
          display: block;
        }
      }

      &_second {
        @include media('lg') {
          display: block;
        }
      }
    }

    &__blocks {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 4px;
      overflow: hidden;

      @include media('lg') {
        align-items: flex-start;
        flex-direction: row-reverse;
        gap: 16px;
      }
    }

    &__top-block {
      display: grid;
      grid-template-columns: 1fr auto;
      align-items: center;
      gap: 8px;
      padding-right: 8px;

      @include media('lg') {
        flex-grow: 1;
        gap: 16px;
      }
    }

    &__actions {
      display: flex;
      align-items: center;
      gap: 8px;

      @include media('lg') {
        align-self: flex-start;
      }
    }

    &__action {
      color: var(--primary);

      @include media('lg') {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 32px;
        width: 32px;
        border-radius: 8px;
        @include border(1px, var(--light-2));
      }

      @include media('xl') {
        height: 40px;
        width: 40px;
      }

      svg {
        width: 20px;
        height: 20px;

        @include media('lg') {
          width: 16px;
          height: 16px;
        }

        @include media('xl') {
          width: 20px;
          height: 20px;
        }
      }
    }

    &__bottom-block {
      flex-shrink: 0;
      display: flex;
      align-items: center;
      gap: 4px;
    }
  }
</style>

<script>
  import { setCssVariable } from '@/utils/styles';

  const header = document.querySelector<HTMLHeadElement>("[data-component='header']");
  if (header) {
    const setCssHeaderHeight = () => {
      const headerHeight = header.clientHeight;
      setCssVariable('--header-height', `${headerHeight}px`);
    };

    setCssHeaderHeight();
    const resizeObserver = new ResizeObserver((entries) => {
      for (const entry of entries) {
        if (entry.target === header) {
          setCssHeaderHeight()
        }
      }
    });
    resizeObserver.observe(header);
  }
</script>
