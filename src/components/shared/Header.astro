---
import { Icon } from 'astro-icon/components';
import Hamburger from './Hamburger.astro';
import HeaderModal from './HeaderModal.astro';
import { Picture } from 'astro:assets';

import logoImg from '@assets/img/logo.svg';
import type { HTMLAttributes } from 'astro/types';

type Props = Pick<HTMLAttributes<'header'>, 'class'>;

const { class: className, ...rest } = Astro.props;

const inputTags: string[] = ['Доставка и оплата', 'Нужна помощь с выбором', 'Индивидуальный заказ'];
---

<header class:list={['header', className]} data-component='header' {...rest}>
  <div class='header__container container'>
    <div class='header__wrapper'>
      <a href='/' class='header__logo'>
        <Picture inferSize layout='constrained' formats={['avif', 'webp']} src={logoImg} alt='logo' />
      </a>
      <div class='header__separator header__separator_first'></div>
      <div class='header__blocks'>
        <div class='header__top-block'>
          <div class='header__input input-header'>
            <div class='input-header__field'>
              <Icon class='input-header__icon' name='stars' />
              <input class='input-header__input' type='text' placeholder='Найти  или задать вопрос...' />
            </div>
            <div class='input-header__tags'>
              {inputTags.map((tag) => <button class='input-header__tag'>{tag}</button>)}
            </div>
          </div>
          <div class='header__actions'>
            <a href='#' class='header__action'>
              <Icon name='account-icon' />
            </a>
            <a href='#' class='header__action'>
              <Icon name='cart-icon' />
            </a>
          </div>
        </div>
        <div class='header__separator header__separator_second'></div>
        <div class='header__bottom-block'>
          <Hamburger />
        </div>
      </div>
      <HeaderModal />
    </div>
  </div>
</header>

<style lang='scss'>
  .header {
    position: relative;
    overflow: hidden;

    &.open {
      overflow: visible;
    }

    &__wrapper {
      overflow: hidden;
      padding: 6px 0 0;
      padding-right: 0px;

      display: flex;
      align-items: center;
      gap: 4px;

      @include media('xl') {
        gap: 16px;
      }
    }

    &__logo {
      width: 104px;
      height: 62px;
      flex-shrink: 0;

      img {
        width: 100%;
        height: 100%;
      }

      @include media('lg') {
        width: 122px;
        height: 70px;
      }

      @include media('xl') {
        width: 166px;
        height: 88px;
      }
    }

    &__separator {
      display: none;

      background-color: var(--light-2);
      width: 1px;

      @include media('lg') {
        height: 68px;
      }

      @include media('xl') {
        height: 88px;
      }

      &_first {
        @include media('xl') {
          display: block;
        }
      }

      &_second {
        @include media('lg') {
          display: block;
        }
      }
    }

    &__blocks {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 4px;
      overflow: hidden;

      @include media('lg') {
        flex-direction: row-reverse;
        gap: 16px;
      }
    }

    &__top-block {
      display: grid;
      grid-template-columns: 1fr auto;
      align-items: center;
      gap: 8px;
      padding-right: 8px;

      @include media('lg') {
        flex-grow: 1;
        gap: 16px;
      }
    }

    &__input {
    }

    &__actions {
      display: flex;
      align-items: center;
      gap: 8px;

      @include media('lg') {
        align-self: flex-start;
      }
    }

    &__action {
      color: var(--primary);

      @include media('lg') {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 32px;
        width: 32px;
        border-radius: 8px;
        border: 1px solid var(--light-2);
      }

      @include media('xl') {
        height: 40px;
        width: 40px;
      }

      svg {
        width: 20px;
        height: 20px;

        @include media('lg') {
          width: 16px;
          height: 16px;
        }

        @include media('xl') {
          width: 20px;
          height: 20px;
        }
      }
    }

    &__bottom-block {
      display: flex;
      align-items: center;
      gap: 4px;
    }
  }

  .input-header {
    padding: 6px;
    border-radius: 8px;
    background-color: var(--light);
    flex-grow: 1;

    @include media('md') {
      padding: 8px;
    }

    @include media('lg') {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      gap: 12px;
    }

    @include media('xl') {
      padding: 10px;
      gap: 26px;
      height: 88px;
    }

    &__field {
      display: flex;
      align-items: center;
      gap: 6px;
    }

    &__icon {
      color: var(--primary);
      width: 24px;
      height: 16px;
    }

    &__input {
      width: 100%;

      font-family: var(--font-secondary);
      font-weight: 500;
      font-size: 12px;
      line-height: 16px;
      background-color: transparent;

      @include media('md') {
        font-size: 13px;
      }

      @include media('xl') {
        font-size: 14px;
      }

      &::placeholder {
        color: var(--light-3);
      }
    }

    &__tags {
      display: none;

      @include media('lg') {
        display: flex;
        gap: 6px;
      }
    }

    &__tag {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 6px;
      background-color: var(--white);
      padding: 5px 8px;

      font-family: var(--font-secondary);
      font-size: 14px;
      color: var(--secondary);
      transition: color 0.3s ease-in-out;

      &:hover {
        color: var(--primary);
      }
    }
  }
</style>

<script>
  const inputWrapper = document.querySelector<HTMLDivElement>('.header__input');
  const input = inputWrapper?.querySelector<HTMLInputElement>('input');

  inputWrapper?.addEventListener('click', () => {
    input?.focus();
  });

  document.querySelectorAll<HTMLButtonElement>('.input-header__tag').forEach((tag) =>
    tag.addEventListener('click', (e) => {
      e.stopPropagation();
    })
  );
</script>
