---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'input'> & { required?: boolean };

const { class: className, placeholder, required, type, ...rest } = Astro.props;
---

<div class:list={['field-input', className]} {...rest} data-component='field-input'>
  <div class='field-input__wrapper'>
    <input class='field-input__input' type={type} />
    <div class='field-input__label-wrapper'>
      <div class='field-input__label'>{placeholder}</div>
      {required && <div class='field-input__label-required'>*</div>}
    </div>
  </div>
</div>

<style lang='scss'>
  .field-input {
    height: 48px;
    padding: 10px 12px;
    border-radius: 8px;
    background-color: var(--light);
    transition: all 0.1s ease-in-out;
    cursor: text;

    @include media('lg') {
      height: 56px;
    }

    &.focused, &.active {
      background-color: transparent;
      @include border(1px, var(--light-2))
    }

    &__wrapper {
      position: relative;
      height: 100%;
    }

    &__input {
      opacity: 0;
      visibility: hidden;
      pointer-events: none;

      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      background-color: transparent;

      font-family: var(--font-primary);
      font-weight: 800;
      font-size: 16px;
      color: var(--secondary);

      .focused &,
      .active & {
        opacity: 1;
        visibility: visible;
        pointer-events: auto;
      }
    }

    &__label-wrapper {
      position: absolute;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
      transition: all 0.1s ease-in-out;

      display: flex;
      align-items: center;
      gap: 2px;

      .focused &,
      .active & {
        top: 0;
        transform: translateY(-4px);
      }
    }

    &__label {
      font-weight: 800;
      font-size: 14px;
      text-transform: uppercase;

      .focused &,
      .active & {
        font-size: 12px;
        color: var(--primary);
      }
    }

    &__label-required {
      font-weight: 800;
      font-size: 16px;
      text-transform: uppercase;
      color: var(--primary);
    }
  }
</style>

<script>
  document.querySelectorAll<HTMLDivElement>("[data-component='field-input']").forEach((inputWrapper) => {
    const input = inputWrapper.querySelector<HTMLInputElement>('input');
    if (input) {
      inputWrapper.addEventListener('click', () => {
        inputWrapper.classList.add('focused');
        input.focus();
      });

      input.addEventListener('blur', () => {
        inputWrapper.classList.remove('focused');
      });

      input.addEventListener('change', () => {
        if (input.value.length > 0) {
          inputWrapper.classList.add('active');
        } else {
          inputWrapper.classList.remove('active');
        }
      });
    }
  });
</script>
