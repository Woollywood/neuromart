---
import type { ImageMetadata } from 'astro';
import type { HTMLAttributes } from 'astro/types';
import { Picture } from 'astro:assets';
import CardButton from './CardButton.astro';
import CardContent from './CardContent.astro';
import type { Breakpoints } from '@/utils/types';

export interface Slide {
  image: Promise<{ default: ImageMetadata }>;
  country: string;
  title: string;
  description: string;
  price: string;
}

interface Props extends Pick<HTMLAttributes<'div'>, 'class'> {
  slides: Slide[];
  breakpoints?: string;
}

const { slides, breakpoints, class: className, ...rest } = Astro.props;
---

<div class:list={[className, 'splide slider']} data-component='slider' data-slider-breakpoints={breakpoints} {...rest}>
  <div class='splide__track slider__track'>
    <ul class='splide__list slider__list'>
      {
        slides.map(({ image, title, price, description, country }) => (
          <div class='splide__slide slider__slide slide'>
            <div class='slide__inner'>
              <div class='slide__image'>
                <Picture inferSize layout='constrained' formats={['avif', 'webp']} src={image} alt='image' />
              </div>
              <CardContent title={country} subtitle={title} description={description}>
                <div class="slide__action-wrapper">
                  <CardButton text='опт' price={price} />
                </div>
              </CardContent>
            </div>
          </div>
        ))
      }
    </ul>
  </div>
</div>

<style lang='scss'>
  .slider {
    @include border(1px, var(--light-2));
    margin-right: -8px;
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;

    @include media('lg') {
      margin-right: 0;
      border-radius: 8px;
    }

    @include media('xl') {
      border-radius: 12px;
    }

    &__track {
    }

    &__list {
    }
  }

  .slide {
    padding: 8px 0;

    &__inner {
      border-right: 1px solid var(--light-2);
    }

    &__image {
      position: relative;
      aspect-ratio: 117 / 144;
      margin-bottom: 6px;

      @include media('md') {
        aspect-ratio: 187 / 288;
      }

      @include media('lg') {
        aspect-ratio: 201 / 288;
      }

      @include media('xl') {
        aspect-ratio: 229 / 328;
      }

      img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }

    &__action-wrapper {
      display: flex;
      justify-content: center;
    }
  }
</style>

<script>
  import { getMediaCssParsedVariable, MediaSizes } from '@/utils/styles';
  import type { Breakpoints } from '@/utils/types';
  import Splide from '@splidejs/splide';

  document.querySelectorAll<HTMLDivElement>("[data-component='slider']").forEach((slider) => {
    const dataBreakpoints = slider.dataset.sliderBreakpoints;
    const breakpoints = dataBreakpoints ? JSON.parse(dataBreakpoints) : {};
    const hasBreakpoints = Object.keys(breakpoints).length > 0;

    const originalBreakpoints: Breakpoints = {
      [getMediaCssParsedVariable(MediaSizes.MD)]: { perPage: 4 },
      [getMediaCssParsedVariable(MediaSizes.LG)]: { perPage: 6 },
      [getMediaCssParsedVariable(MediaSizes.XL)]: { perPage: 8 },
    };

    new Splide(slider, {
      type: 'loop',
      arrows: false,
      pagination: false,
      mediaQuery: 'min',
      perPage: 3,
      breakpoints: hasBreakpoints ? breakpoints : originalBreakpoints,
    }).mount();
  });
</script>
